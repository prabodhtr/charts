apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole # required for cluster wide access control not limited to one particular namespace
metadata:
  name: kopf-role
rules:
  - apiGroups: [""]
    resources: ["pods", "events","pods/status", "namespaces", "services", "services/status"]
    verbs: ["list", "watch", "patch", "create"]

  - apiGroups: ["apps", "apiextensions.k8s.io"]
    resources: ["deployments", "customresourcedefinitions", "deployments/status"]
    verbs: ["get", "create", "list", "watch", "patch"]

  - apiGroups: ["autoscaling"]
    resources: ["horizontalpodautoscalers"]
    verbs: ["get", "create", "list", "watch", "patch"]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: kopf-role-binding

roleRef:
  kind: ClusterRole
  name: kopf-role
  apiGroup: rbac.authorization.k8s.io

subjects:
  - kind: ServiceAccount
    name: {{ include "trino-kopf.serviceAccountName" . }}
    namespace: default #subjects are always scoped to namespaces although it need not be created in a specific one